name: release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  DOTNETVERSION: "8.0.x"
  APP: "QuickAnki"
  SOLUTION: "./QuickAnki.sln"
  BUILDOUTPUTPATH_LINUX: "/home/runner/work/QuickAnki/QuickAnki/QuickAnki/bin/Release/net8.0/linux-x64/publish"
  BUILDOUTPUTPATH_WIN: "/home/runner/work/QuickAnki/QuickAnki/QuickAnki/bin/Release/net8.0/win-x64/publish"
  BUILDOUTPUTPATH_OSX: "/home/runner/work/QuickAnki/QuickAnki/QuickAnki/bin/Release/net8.0/osx-x64/publish"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - name: Setup .NET Core SDK ${{ env.DOTNETVERSION }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ env.DOTNETVERSION }}

      - name: Get version
        id: version
        uses: battila7/get-version-action@v2

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION }}

      - name: Build Linux
        run: dotnet publish ${{ env.SOLUTION }} -r linux-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None -p:DebugSymbols=false --self-contained

      - name: Build Windows
        run: dotnet publish ${{ env.SOLUTION }} -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None -p:DebugSymbols=false --self-contained  

      - name: Build OSX
        run: dotnet publish ${{ env.SOLUTION }} -r osx-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:DebugType=None -p:DebugSymbols=false --self-contained
                    
      - name: GitHub release
        uses: actions/create-release@v1
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body: ''
          draft: false
          prerelease: false

      - name: ZIP release artifact Linux
        run: echo $(pwd); echo $(find . -type d); cd ${{ env.BUILDOUTPUTPATH_LINUX }}; zip -r ../${{ env.APP }}-${{ steps.version.outputs.version }}-linux64.zip ./

      - name: ZIP release artifact Windows
        run: echo $(pwd); echo $(find . -type d); cd ${{ env.BUILDOUTPUTPATH_WIN }}; zip -r ../${{ env.APP }}-${{ steps.version.outputs.version }}-win64.zip ./
      
      - name: ZIP release artifact OSX
        run: echo $(pwd); echo $(find . -type d); cd ${{ env.BUILDOUTPUTPATH_OSX }}; zip -r ../${{ env.APP }}-${{ steps.version.outputs.version }}-osx64.zip ./

      - name: GitHub release assets Linux
        uses: actions/upload-release-asset@v1
        id: release_assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.BUILDOUTPUTPATH_LINUX }}/../${{ env.APP }}-${{ steps.version.outputs.version }}-linux64.zip
          asset_name: ${{ env.APP }}-${{ steps.version.outputs.version }}-linux64.zip
          asset_content_type: application/zip
      
      - name: GitHub release assets Windows
        uses: actions/upload-release-asset@v1
        id: release_assets_2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.BUILDOUTPUTPATH_WIN }}/../${{ env.APP }}-${{ steps.version.outputs.version }}-win64.zip
          asset_name: ${{ env.APP }}-${{ steps.version.outputs.version }}-win64.zip
          asset_content_type: application/zip

      - name: GitHub release assets OSX
        uses: actions/upload-release-asset@v1
        id: release_assets_3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ${{ env.BUILDOUTPUTPATH_OSX }}/../${{ env.APP }}-${{ steps.version.outputs.version }}-osx64.zip
          asset_name: ${{ env.APP }}-${{ steps.version.outputs.version }}-osx64.zip
          asset_content_type: application/zip